<launch>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <remap from="openni_points" to="/obstacles_cloud"/>
    <remap from="map" to="/global_costmap"/>
    <rosparam file="$(find motion_plan)/config/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
    <rosparam file="$(find motion_plan)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find motion_plan)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find motion_plan)/config/global_costmap_params.yaml" command="load" /> 
    <rosparam file="$(find motion_plan)/config/base_local_planner_params.yaml" command="load" />
 </node>

 <node pkg="grid_map_visualization" type="grid_map_visualization" name="grid_map_visualization" output="screen" />
  <node pkg="grid_map_demos" type="filters_demo" name="grid_map_filter_demo" output="screen">
  	<param name="input_topic" value="/elevation_mapping/elevation_map_raw" />
  	<param name="output_topic" value="filtered_map" />
    <rosparam command="load" file="$(find motion_plan)/config/filters_demo_filter_chain.yaml" />
  </node>
  <rosparam command="load" file="$(find motion_plan)/config/filters_demo.yaml" />

  <node pkg="motion_plan" name="global_mapper" type="global_mapper" output="screen" /> 

  <node pkg="elevation_mapping" type="elevation_mapping" name="elevation_mapping" output="screen">
    <rosparam command="load" file="$(find motion_plan)/config/elevation.yaml" />
    <rosparam command="load" file="$(find elevation_mapping)/config/sensor_processors/kinect_nguyen_et_al.yaml" ns ="input_sources/front"/>
    <rosparam command="load" file="$(find motion_plan)/config/postprocessor_pipeline.yaml" />
  </node>

  <node pkg="grid_map_visualization" type="grid_map_visualization" name="elevation_map_fused_visualization" output="screen">
   	<param name="grid_map_topic" value="/elevation_mapping/elevation_map" />
    <rosparam command="load" file="$(find elevation_mapping_demos)/config/visualization/fused.yaml" />
  </node>
  <node pkg="grid_map_visualization" type="grid_map_visualization" name="elevation_map_raw_visualization" output="screen">
    <param name="grid_map_topic" value="/elevation_mapping/elevation_map_raw" />
    <rosparam command="load" file="$(find elevation_mapping_demos)/config/visualization/raw.yaml" />
  </node>


  <node pkg="nodelet" type="nodelet" name="voxel_grid" args="standalone pcl/VoxelGrid pcl_manager" output="screen">
    <remap from="~input" to="/zed2/point_cloud/cloud_registered" />
    <rosparam>
      filter_field_name: z
      filter_limit_min: -10
      filter_limit_max: 10
      filter_limit_negative: False
      leaf_size: 0.05
    </rosparam>
  </node>
  <node pkg="nodelet" type="nodelet" name="obstacles_detection" args="standalone rtabmap_ros/obstacles_detection pcl_manager" output="screen">
      <remap from="cloud"     to="/voxel_grid/output"/>
      <remap from="obstacles" to="/obstacles_cloud"/>
      <remap from="ground"    to="/ground_cloud"/>

      <param name="frame_id"             type="string" value="base_link"/>		
      <param name="map_frame_id"         type="string" value="map"/>
      <param name="wait_for_transform"   type="bool" value="true"/>
      <param name="Grid/MinClusterSize"     type="int" value="5"/>
      <param name="Grid/MaxObstacleHeight" type="double" value="0.4"/>
      <param name="Grid/MaxGroundAngle" type="double" value="30"/>
  </node>

</launch>
