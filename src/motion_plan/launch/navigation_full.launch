<launch>
  <arg name="marker_size" default="15.0"/>
  <arg name="max_new_marker_error" default="0.1"/>
  <arg name="max_track_error" default="1.0"/>
  <arg name="cam_image_topic" default="/zed2/point_cloud/cloud_registered"/>
  <arg name="cam_info_topic" default="/zed2/depth/camera_info"/>
  <arg name="output_frame" default="odom"/>
  <node name="ar_track_alvar" pkg="ar_track_alvar" type="individualMarkers" respawn="false" output="screen" args="$(arg marker_size) $(arg max_new_marker_error) $(arg max_track_error) $(arg cam_image_topic) $(arg cam_info_topic) $(arg output_frame)"/>

  <include file="$(find leo_erc_viz)/launch/rviz.launch" />
	
  <!-- <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
    <remap from="cloud_in" to="/zed2/point_cloud/cloud_registered"/>
    <remap from="scan" to="/laser/scan" />
    <rosparam>
      target_frame: camera_frame
      transform_tolerance: 0.01
      min_height: 0.0
      max_height: 1.0
      
      angle_min: -0.7854
      angle_max: 0.7854
      angle_increment: 0.00436333333
      scan_time: 0.3333
      range_min: 0.45
      range_max: 4.0
      use_inf: true
      
      #concurrency_level affects number of pc queued for processing and the number of threadsused
      # 0: Detect number of cores
      # 1: Single threaded
      # 2: inf : Parallelism level
      concurrency_level: 1
    </rosparam>
  </node> -->
 
  <node name="ekf_odom" pkg="robot_localization" type="ekf_localization_node">  
    <param name="frequency" value="10." />
    <param name="sensor_timeout" value="0.5" />
    <param name="two_d_mode" value="false" />

    <param name="map_frame" value="map" />
    <param name="odom_frame" value="odom" />
    <param name="base_link_frame" value="base_footprint" />
    <param name="world_frame" value="odom" />
    <remap from="/odometry/filtered" to="/odometry/landmark/filtered"/>

    <!-- <param name="twist0" value="/wheel_odom_cov" />
    <param name="twist0_differential" value="false"/>
    <param name="twist0_relative" value="true"/>
    <param name="twist0_queue_size" value="5"/>
    <rosparam param="twist0_config">
      [false, false, false, 
      false, false, false,
      true, false, false, 
      false, false, true,
      false, false, false]</rosparam> -->

    <!-- <param name="imu0" value="/zed2/imu/data" />
    <param name="imu0_differential" value="false"/>
    <param name="imu0_relative" value="true"/>
    <param name="imu0_queue_size" value="5"/>
    <param name="imu0_remove_gravitational_acceleration" value="true"/>
    <rosparam param="imu0_config">
      [false, false, false, 
      true, true, true,
      false, false, false, 
      true, true, true,
      false, false, false]</rosparam> -->

    <param name="odom0" value="/zed2/odom" />
    <param name="odom0_differential" value="false"/>
    <param name="odom0_relative" value="true"/>
    <param name="odom0_queue_size" value="5"/>
    <rosparam param="odom0_config">
      [true, true, true, 
      true, true, true,
      false, false, false, 
      false, false, false,
      false, false, false]</rosparam>

  </node>

  <node name="ekf_map" pkg="robot_localization" type="ekf_localization_node">  
    <param name="frequency" value="10." />
    <param name="sensor_timeout" value="0.5" />
    <param name="two_d_mode" value="false" />
    <param name="publish_tf" value="true" />
    <param name="transform_time_offset" value="0.2"/>

    <param name="map_frame" value="map" />
    <param name="odom_frame" value="odom" />
    <param name="base_link_frame" value="base_footprint" />
    <param name="world_frame" value="map" />

    <!-- <param name="twist0" value="/wheel_odom_cov" />
    <param name="twist0_differential" value="false"/>
    <param name="twist0_relative" value="false"/>
    <param name="twist0_queue_size" value="5"/>
    <rosparam param="twist0_config">
      [false, false, false, 
      false, false, false,
      false, false, false, 
      false, false, true,
      false, false, false]</rosparam> -->
      
    <param name="odom0" value="/zed2/odom" />
    <param name="odom0_differential" value="false"/>
    <param name="odom0_relative" value="true"/>
    <param name="odom0_queue_size" value="5"/>
    <rosparam param="odom0_config">
      [true, true, true, 
      true, true, true,
      false, false, false, 
      false, false, false,
      false, false, false]</rosparam>

    <param name="odom1" value="/landmark/odom" />
    <param name="odom1_differential" value="false"/>
    <param name="odom1_relative" value="false"/>
    <param name="odom1_queue_size" value="5"/>
    <rosparam param="odom1_config">
      [true, true, false, 
      false, false, false,
      false, false, false, 
      false, false, false,
      false, false, false]</rosparam>

  </node>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <remap from="openni_points" to="/obstacles_cloud"/>
    <remap from="map" to="/global_costmap"/>
    <rosparam file="$(find motion_plan)/config/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
    <rosparam file="$(find motion_plan)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find motion_plan)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find motion_plan)/config/global_costmap_params.yaml" command="load" /> 
    <rosparam file="$(find motion_plan)/config/base_local_planner_params.yaml" command="load" />
 </node>

 
  <!-- <node pkg="octomap_server" type="octomap_server_node" name="octomap_server" output="screen">
    <param name="resolution" value="0.02" />
    <param name="frame_id" type="string" value="map" />
    <param name="sensor_model/max_range" value="5.0" />
    
    <param name="pointcloud_min_z" value="-2.0" />
    <param name="pointcloud_max_z" value="6.0" />
    <remap from="cloud_in" to="/zed2/point_cloud/cloud_registered" />

  </node>

  <node pkg="grid_map_demos" type="octomap_to_gridmap_demo" name="octomap_to_gridmap_demo" output="screen" /> -->
  <node pkg="grid_map_visualization" type="grid_map_visualization" name="grid_map_visualization" output="screen" />
  <node pkg="grid_map_demos" type="filters_demo" name="grid_map_filter_demo" output="screen">
  	<param name="input_topic" value="/elevation_mapping/elevation_map_raw" />
  	<param name="output_topic" value="filtered_map" />
    <rosparam command="load" file="$(find motion_plan)/config/filters_demo_filter_chain.yaml" />
  </node>
  <rosparam command="load" file="$(find motion_plan)/config/filters_demo.yaml" />


<!-- 
  <node pkg="motion_plan" name="waypoint" type="waypoint.py" output="screen" /> -->
  <node pkg="motion_plan" name="position" type="position" output="screen" />
  <node pkg="motion_plan" name="global_mapper" type="global_mapper" output="screen" /> 
  <node name="publish_pose" pkg="topic_tools" type="transform" args="/odometry/filtered /odometry/filtered/pose geometry_msgs/PoseWithCovarianceStamped 'm.header, m.pose'" />


  <node pkg="elevation_mapping" type="elevation_mapping" name="elevation_mapping" output="screen">
    <rosparam command="load" file="$(find motion_plan)/config/elevation.yaml" />
    <rosparam command="load" file="$(find elevation_mapping)/config/sensor_processors/kinect_nguyen_et_al.yaml" ns ="input_sources/front"/>
    <rosparam command="load" file="$(find motion_plan)/config/postprocessor_pipeline.yaml" />
  </node>

  <node pkg="grid_map_visualization" type="grid_map_visualization" name="elevation_map_fused_visualization" output="screen">
   	<param name="grid_map_topic" value="/elevation_mapping/elevation_map" />
    <rosparam command="load" file="$(find elevation_mapping_demos)/config/visualization/fused.yaml" />
  </node>
  <node pkg="grid_map_visualization" type="grid_map_visualization" name="elevation_map_raw_visualization" output="screen">
    <param name="grid_map_topic" value="/elevation_mapping/elevation_map_raw" />
    <rosparam command="load" file="$(find elevation_mapping_demos)/config/visualization/raw.yaml" />
  </node>


  <node pkg="nodelet" type="nodelet" name="voxel_grid" args="standalone pcl/VoxelGrid pcl_manager" output="screen">
    <remap from="~input" to="/zed2/point_cloud/cloud_registered" />
    <rosparam>
      filter_field_name: z
      filter_limit_min: -10
      filter_limit_max: 10
      filter_limit_negative: False
      leaf_size: 0.05
    </rosparam>
  </node>
  <node pkg="nodelet" type="nodelet" name="obstacles_detection" args="standalone rtabmap_ros/obstacles_detection pcl_manager" output="screen">
      <remap from="cloud"     to="/voxel_grid/output"/>
      <remap from="obstacles" to="/obstacles_cloud"/>
      <remap from="ground"    to="/ground_cloud"/>

      <param name="frame_id"             type="string" value="base_link"/>		
      <param name="map_frame_id"         type="string" value="map"/>
      <param name="wait_for_transform"   type="bool" value="true"/>
      <param name="Grid/MinClusterSize"     type="int" value="5"/>
      <param name="Grid/MaxObstacleHeight" type="double" value="0.4"/>
      <param name="Grid/MaxGroundAngle" type="double" value="30"/>
  </node>

</launch>
